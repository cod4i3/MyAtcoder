def inv_init(N, P):
    fact = [1, 1]
    factinv = [1, 1]
    inv = [0, 1]
    for i in range(2, N + 1):
        fact.append((fact[-1] * i) % p)
        inv.append((-inv[p % i] * (p // i)) % p)
        factinv.append((factinv[-1] * inv[-1]) % p)
    return fact, inv, factinv

def cmb(n, r, p):
    if (r < 0) or (n < r):
        return 0
    r = min(r, n - r)
    return fact[n] * factinv[r] * factinv[n-r] % p


def egcd(a, b):
    if a == 0: 
        return (b, 0, 1)
    g, y, x = egcd(b%a,a)
    return (g, x - (b//a) * y, y)

# ax ≡ 1(mod m)のときのaの逆元が求められる
def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('逆元はありません')
    return x % m

# pythonに限ってはmodinvは下記のでいい
# def modinv(a, m): return pow(a, m-2, m)

def main():
    fact, inv, factinv = inv_init(n, p)