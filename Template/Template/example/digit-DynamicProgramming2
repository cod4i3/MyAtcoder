/* 例題
N 以下の正整数であって、十進法表記したときの各桁の数の和が D の倍数であるものの個数を mod 1,000,000,007 で求めよ。
    1≤𝑁≤1010000 
    1≤𝐷≤100

dp[ i ][smaller][ j ] := 上から i 桁目までの各桁の数の和が mod Dで j となる数。
                         smaller が true  ならNより小さい場合を考え、
                         smaller が false ならNと同じ場合を考える。
                         上からという点で悩んだので注意！！！！！！！！

smallerというのはNより小さいかどうかを表している
*/

int main() {
    int D;
    string N;
    ll dp[10005][2][105];
    cin >> D >> N;
    int n = N.size();
    dp[0][0][0] = 1;
    REP(i, n) {
        REP(j, D) {
            // i桁目まででNより小さいならi+1桁目は何でも良い
            REP(k, 10) {
                dp[i + 1][1][(j + k) % D] += dp[i][1][j];
                dp[i + 1][1][(j + k) % D] %= MOD;
            }
 
            int ni = (N[i] - '0');
 
            // i桁目までNと同じで、i+1桁目はNより小さい数の時
            // このkはni以下の数
            REP(k, ni) {
                dp[i + 1][1][(j + k) % D] += dp[i][0][j];
                dp[i + 1][1][(j + k) % D] %= MOD;
            }
 
            //  i桁目までNと同じで、i+1桁目もNと同じ数の時
            dp[i + 1][0][(j + ni) % D] = dp[i][0][j];
        }
    }
 
    cout << dp[n][0][0] + dp[n][1][0] - 1 << endl;
 
    return 0;
}