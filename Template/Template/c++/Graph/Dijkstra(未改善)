// 計算量は O(|V|^2)
// 辺e = (u,v)のコスト、頂点sからの最短距離、訪問済フラグ、頂点数
int cost[MAX_V][MAX_V];
int d[MAX_V]
bool used[MAX_V];
int V;

// 始点sから各頂点への最短距離
void dijkstra(int s){
  fill(d, d+V, INF);
  fill(used, used+V, false);
  d[s] = 0;

  while(true){
    int v = -1;
    // 未訪問かつ距離が最小のものを探す
    for(int u = 0; u < V; u++){
      if(!used[u] && (v == -1 || d[u] < d[v)) v = u;
    }

    if(v == -1) break;
    used[v] = true;

    for(int u=0; u<V; u++){
      d[u] = min(d[u], d[v] + cost[v][u]);
    }
  }
}